CIとは
Continuous Integration 継続的インテグレーション

開発者はコード変更を頻繁に行いながら開発を行う。共有化されたリポジトリにマージし、都度、ビルドとテストを繰り返し実行する。レポート表示も含まれる
アーティファクトのセキュリテイィ脆弱性スキャン

> 小さなサイクルでインテグレーションを行い、インテグレーションのエラーを素早く検知・修正を行いながら共有された開発を行い迅速に開発を行う

旧環境
・開発者は長期間にわたり、独立した環境で作業を行い、作業が完了したことで変更点をマスターにマージを行なった。
しかし、累積したコード変更をマージする作業はコンフリクトが発生し、回帰が発生するなどの懸念もしくはバグが発生した。影響範囲も広くなるため、特定と修正にかかるコストが大きくなる
→ 累積時間（リードタイム）を最小限にすることで、ビルドと検証を行いながら、フェーズが進むにつれておおっきな単位での検証が行われるように設計された

ソフトウェアインペクション（ソフトウェアを実際に動作させることなく）

未来・理想
・開発効率を上げるため、（リードタイムを短縮にさせる。）
　・リードタイムを短縮させる
　　・結果が早くほしい
  ・どこでバグが発生するか→テストコード
・バグを短時間で発見・対処
・更新を迅速に配信

価値を生まないプロダクトを減らす

デザインスプリント
理解（解決しようとしている課題を定義し、分析する）
発散（課題を解決するためのアイデアを生み出す）
決定（採用および決定を行う）
プロトタイプ（試作品を作成）
テスト（使われ方を観察し、家庭の正しさを確認）

・CircleCIに関してはbaseは変更されない。テストに関しての事項が増えた時に自動的にリベースする。
　→　baseを変更するため運用フローを変更すr必要あり
 →　ビルドが成功したら自動でマージする機能
・特記事項（リリース事項）を自動的に出力

